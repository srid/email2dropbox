#+TITLE: Funnel

Funnel is an experiment in leveraging plain ol' filesystem for processing
network requests, such as email and webhooks, via Dropbox. The *philosophy
behind funnel* is to facilitate the use of simple UNIX tools for processing data
that spans the network. As an *example*, the command =cat ${FILE} >>
org/Inbox.org= is all that is needed to process an incoming email (stored in
Dropbox) from the user requesting an addition of GTD inbox item to their org
file stored in Dropbox.

** Current design

- Email to Dropbox
- Unix tools pipeped, processing on new content in Dropbox
- Possibly, tools write back to trigger remote actions (http request, email response, etc.)

** DONE MVP 
CLOSED: [2015-08-15 Sat 17:57] SCHEDULED: <2015-08-15 Sat>
- [X] Create a Heroku app with a suitable /mail addon/.
  - [X] Write app.json
  - [X] Write Hello world server 
  - [X] Verify the mail addon
    - [X] Resolve sender signature troubles (!)
    - [X] Verify webhook works
      - [X] Fix Flask.g not working
        - [X] Switch to Pyramid!
      - [X] Log webhook data
- [X] Use Dropbox app folder API
  - [X] Pick an API and language
  - [X] Get oauth flow working
    - [X] Configure pyramid session
- [X] Test by writing to hello.txt
  - [X] Persist oauth token in env var
  - [X] Write file!
- [X] Append to the file instead
** TODO Stage II work
Planning:
- [X] have the app create one file per entry.
  - =./<timestamp>.json=
- [X] then we can do =ls -1 | sort | head -1= to pick the earliest item; process and delete it.
- [ ] How to configure 'templates'?
  - eg: distinguish org-Inbox-append from other message types?
  - and how to configure this when sending emails?? 
    where the user generally types only subject and body.
  - [ ] Perhaps leave this to the CLI? We don't provide templates; the CLI can
    do whatever it wants, including smartly parsing for different kinds of
    message.

Implementation
- [ ] Configure basic auth
  - [ ] Ensure it works with postmark
  - [ ] Ensure it works with dropbox oauth
- [ ] ???


** HOWTO
- Create a Postmark account
  - Point its inbound URL to https://<thisapp>.herokuapp.com/incoming
- Create Dropbox app keys
  - Set its app key and secret in heroku config
- Visit https://<thisapp>.herokuapp.com/ to complete oauth flow
  - Run the specified TOKEN cli
- Send a test email to your postmark inbound address
