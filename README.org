#+TITLE: email2dropbox

Deploy this app to Heroku and get a free inbound email address to which you may
send emails which are then stored as timestamped JSON files in your Dropbox's
App folder.

#+BEGIN_HTML
<a href="https://heroku.com/deploy">
  <img src="https://www.herokucdn.com/deploy/button.png" alt="Deploy">
</a>
#+END_HTML

* Getting started
- [[https://www.dropbox.com/developers/apps][Create a Dropbox API App]]
  - Make sure to limit it to its own folder
  - Note down the app key and secret
- Deploy using Heroku button
  - Pass on the Dropbox key/secret in the config variables section
- Take note of $PASSWORD from heroku config vars
  - =export APPURL=https://user:${PASSWORD}@${APPNAME}.herokuapp.com=
- In your Dropbox App settings, OAuth 2 redirect url to =${APPURL}/dropboxauth=
- Visit https://<thisapp>.herokuapp.com/ to complete oauth flow
  - Run the specified heroku cli to set the =TOKEN= config var (or do it in the dashboard)
  - If Dropbox displays the token directly, set that value to =TOKEN= config var.
- =heroku addon:open postmark= (or click the addon from the dashboard)
  - in Postmark inbound settings, point the inbound URL to =${APPURL}/incoming=
  - click 'Check'; if it fails, manually generated your Dropbox token
- Send a test email to your postmark inbound address

** Processing JSON files

I use Dropbox on a server VM. Here is a script that monitors the incoming emails
(JSON) and appends to Inbox.org (org-mode):

#+BEGIN_SRC bash
  cd ~/Dropbox/Apps/IncomingEmails
  while true; do find . -name "*.json" -print0 | xargs -r -n 1 ~/Dropbox/org/toinbox.sh; sleep 2; done
#+END_SRC

The =toinbox.sh= script looks like:

#+BEGIN_SRC bash
  #!/bin/bash
  set -e

  json=$1
  title() {
      jq -r .Subject $json
  }
  body() {
      # The `sed` removes \r
      jq -r .TextBody $json | sed ':a;N;$!ba;s/\r//g'
  }

  inboxfile=~/Dropbox/org/Inbox.org

  echo "** TODO `title`" >> $inboxfile
  body >> $inboxfile

  rm $json
#+END_SRC

* Tasks
** DONE MVP 
CLOSED: [2015-08-15 Sat 17:57] SCHEDULED: <2015-08-15 Sat>
- [X] Create a Heroku app with a suitable /mail addon/.
  - [X] Write app.json
  - [X] Write Hello world server 
  - [X] Verify the mail addon
    - [X] Resolve sender signature troubles (!)
    - [X] Verify webhook works
      - [X] Fix Flask.g not working
        - [X] Switch to Pyramid!
      - [X] Log webhook data
- [X] Use Dropbox app folder API
  - [X] Pick an API and language
  - [X] Get oauth flow working
    - [X] Configure pyramid session
- [X] Test by writing to hello.txt
  - [X] Persist oauth token in env var
  - [X] Write file!
- [X] Append to the file instead
** DONE Stage II work
CLOSED: [2015-08-16 Sun 13:01]

Implementation
- [X] Write inbound message as JSON to timestamped files
- [X] Write CLI to append to Inbox.org
- [X] Configure basic auth
  - [X] Ensure it works with postmark
  - [X] Ensure it works with dropbox oauth

** DONE Silently go public [4/4]
CLOSED: [2015-08-16 Sun 14:18]
- [X] Rename project, if necessary.
- [X] Add Heroku button
- [X] Revamp README
- [X] Make repo public

** TODO Announce [0/5]
- [ ] Improve UI & UX
  - [ ] Simplify the whole deployment/setup process
    - Automatic setting of wehbook URL in postmark
    - Automatic showing of Dropbox instructions in index page.
- [ ] Test thoroughly (deploy new apps)
- [ ] Blog post
- [ ] Archive tasks and update README.org
- [ ] Announce (HN, reddit, mailing lists)


